package {{.PluralInstance}}

import (
	"{{.PackageName}}/db"
	"{{.PackageName}}/models"
	"{{.PackageName}}/utils/input"
	"github.com/gin-gonic/gin"
	"net/http"
)

func Update(c *gin.Context) {
	var json_{{.SingleInstance}} models.{{.ModelName}}
	if err := c.ShouldBindJSON(&json_{{.SingleInstance}}); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	id, err := input.GetPathInt(c, "id")
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	var {{.SingleInstance}} models.{{.ModelName}}
	if err := db.DB.First(&{{.SingleInstance}}, id).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	if err := db.DB.Model(&{{.SingleInstance}}).Select("*").Omit("id", "created_at").Updates(json_{{.SingleInstance}}).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	c.JSON(http.StatusOK, {{.SingleInstance}})
}
